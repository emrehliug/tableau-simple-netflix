<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.ExternalImageContentForZones.true...ExternalImageContentForZones />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='netflix_titles' inline='true' name='federated.1dia4yh11lll0o1d3jhim0hotxry' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='textscan.1xdyj7q04f7f4g1h9eqgf12atrmy'>
            <connection class='textscan' directory='C:/Users/gliminha/Downloads/archive' filename='netflix_titles.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xdyj7q04f7f4g1h9eqgf12atrmy' name='netflix_titles.csv' table='[netflix_titles#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='string' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xdyj7q04f7f4g1h9eqgf12atrmy' name='netflix_titles.csv' table='[netflix_titles#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR'>
            <column datatype='string' name='show_id' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='string' name='director' ordinal='3' />
            <column datatype='string' name='cast' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='string' name='date_added' ordinal='6' />
            <column datatype='integer' name='release_year' ordinal='7' />
            <column datatype='string' name='rating' ordinal='8' />
            <column datatype='string' name='duration' ordinal='9' />
            <column datatype='string' name='listed_in' ordinal='10' />
            <column datatype='string' name='description' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>129</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TOP' datatype='string' name='[Calculation_1119707519528484878]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(INDEX())'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles.csv' datatype='table' name='[__tableau_internal_object_id__].[netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='First Country' datatype='string' name='[country - Dividir 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1dia4yh11lll0o1d3jhim0hotxry].[country]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [country], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Added' datatype='string' name='[date_added]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Category' datatype='string' name='[listed_in - Dividir 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1dia4yh11lll0o1d3jhim0hotxry].[listed_in]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [listed_in], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#b20710'>
              <bucket>&quot;Movie&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV Show&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519519055879:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dia4yh11lll0o1d3jhim0hotxry]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:duration:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;114 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;134 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;14 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;154 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;174 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;201 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;54 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;74 min&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;94 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;106 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;126 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;146 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;166 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;190 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;233 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;26 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;46 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;66 min&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;86 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;110 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;130 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;150 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;170 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;194 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;30 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;312 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;50 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;70 min&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;90 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;118 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;138 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;158 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;179 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;208 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;38 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;58 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;78 min&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;98 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;115 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;135 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;15 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;155 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;176 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;203 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;35 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;55 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;75 min&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;95 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;111 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;131 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;151 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;171 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;195 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;51 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;71 min&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;91 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;104 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;124 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;144 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;164 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;187 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;229 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;24 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;44 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;64 min&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;84 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;107 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;127 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;147 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;167 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;191 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;237 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;47 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;67 min&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;87 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;102 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;122 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;142 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;162 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;185 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;22 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;224 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;42 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;62 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;82 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;112 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;132 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;152 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;172 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;196 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;32 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;52 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;72 min&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;92 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;119 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;139 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;159 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;180 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;209 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;39 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;59 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;79 min&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;99 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;100 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;120 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;140 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;160 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;181 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;20 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;212 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;40 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;60 min&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;80 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;103 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;123 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;143 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;163 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;186 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;228 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;23 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;43 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;63 min&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;83 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;105 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;125 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;145 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;165 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;189 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;230 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;25 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;45 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;65 min&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;85 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;116 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;136 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;156 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;16 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;177 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;204 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;36 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;56 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;76 min&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;96 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;113 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;13 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;133 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;153 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;173 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;200 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;53 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;73 min&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;93 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;108 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;128 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;148 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;168 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;192 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;253 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;48 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;68 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 min&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;88 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;101 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;121 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;141 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;161 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;182 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;214 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;41 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;61 min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;81 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;117 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;137 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;157 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;17 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;178 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;205 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;37 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;57 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;77 min&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;97 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;109 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;129 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;149 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;169 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;193 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;273 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;29 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;49 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;69 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;89 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 min&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#b20710'>
              <multibucket>
                <bucket>&quot;TV Show&quot;</bucket>
                <bucket>&quot;[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e50914'>
              <multibucket>
                <bucket>&quot;Movie&quot;</bucket>
                <bucket>&quot;[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles.csv' id='netflix_titles.csv_04D541C1E85F4B4CAA2E306FD4858458'>
            <properties context=''>
              <relation connection='textscan.1xdyj7q04f7f4g1h9eqgf12atrmy' name='netflix_titles.csv' table='[netflix_titles#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_BR'>
                  <column datatype='string' name='show_id' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='string' name='title' ordinal='2' />
                  <column datatype='string' name='director' ordinal='3' />
                  <column datatype='string' name='cast' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='string' name='date_added' ordinal='6' />
                  <column datatype='integer' name='release_year' ordinal='7' />
                  <column datatype='string' name='rating' ordinal='8' />
                  <column datatype='string' name='duration' ordinal='9' />
                  <column datatype='string' name='listed_in' ordinal='10' />
                  <column datatype='string' name='description' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='barReleased_Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Release Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:release_year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Titles:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#aa0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]</rows>
        <cols>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:release_year:qk]</cols>
      </table>
      <simple-id uuid='{94D7F6D1-24A0-4822-A06B-3195E2E4EFCB}' />
    </worksheet>
    <worksheet name='bar_Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' italic='true'>Top países com mais titulos</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='TOP' datatype='string' name='[Calculation_1119707519528484878]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(INDEX())'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='First Country' datatype='string' name='[country - Dividir 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1dia4yh11lll0o1d3jhim0hotxry].[country]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [country], &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country - Dividir 1]' derivation='None' name='[none:country - Dividir 1:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1119707519528484878]' derivation='User' name='[usr:Calculation_1119707519528484878:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country - Dividir 1:nk]' />
              <groupfilter function='member' level='[none:country - Dividir 1:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk]' member='&quot;9&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</column>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk] / [federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk])</rows>
        <cols>[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]</cols>
      </table>
      <simple-id uuid='{B2176FC4-9C9F-45BF-8A4A-DCB7D896384F}' />
    </worksheet>
    <worksheet name='bar_TopCast'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cast]' derivation='None' name='[none:cast:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast:nk]'>
            <groupfilter expression='COUNT([title]) &gt;= 5' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:cast:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:cast:nk]' member='%null%' />
                  <groupfilter function='member' level='[none:cast:nk]' member='&quot;David Spade, London Hughes, Fortune Feimster&quot;' />
                  <groupfilter function='member' level='[none:cast:nk]' member='&quot;Iliza Shlesinger&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, France, United States, Germany, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Armenia, Japan, Jordan, Mexico, Mongolia, New Zealand, Philippines, South Africa, Sweden, United States, Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, New Zealand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, United States, New Zealand, Italy, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Iraq, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, India, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, Netherlands, United States, Colombia, Austria, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States, Spain, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, Italy, Morocco, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Hungary, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, India, Thailand, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Nigeria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, India, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom, France, Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Argentina, France, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Germany, India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Hong Kong, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Spain, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Mexico, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, Belgium, Italy, Netherlands, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Indonesia, Finland, Norway, United Kingdom, Israel, France, United States, Germany, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Singapore, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Sweden, Israel, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Austria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Luxembourg, Romania, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, Italy, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, China, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Iran, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Israel, Germany, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Luxembourg, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Malta, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, South Korea, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Switzerland, Spain, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Luxembourg, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, United States, Canada, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Hong Kong, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Iceland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, China, Canada, Japan, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, Luxembourg, United States, United Kingdom, Philippines, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, France, Iceland, United States, Mexico, Belgium, United Kingdom, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Switzerland, United Kingdom, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, Italy, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany, Poland, Luxembourg, Belgium, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, South Africa, West Germany, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States, Spain, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, Australia, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Iceland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, Norway, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, France, Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Puerto Rico, United States, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, Netherlands, Germany, Jordan, United Arab Emirates, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia, Kenya, Sudan, South Africa, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, New Zealand, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Canada, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Germany, Denmark, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Thailand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Hong Kong, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, United States, Germany, Bahamas&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Egypt, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Finland, Germany, United States, Australia, Japan, France, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Canada, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Poland, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium, Luxembourg, China, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Italy, Israel, Peru, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Namibia, South Africa, Zimbabwe, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Russia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ukraine, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Germany, Denmark, Belgium, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Spain, Germany, Greece, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States,&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Samoa, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, South Africa, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Belgium, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bermuda, Ecuador&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Botswana&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, India, Uganda, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, Japan, Spain, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, South Korea, Mexico, Japan, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia, Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Belgium, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Indonesia, United Kingdom, China, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Japan, Panama&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile, Israel&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, East Germany, West Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Lebanon, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Italy, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, South Korea, Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ghana, Burkina Faso, United Kingdom, Germany, Ethiopia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary, Ireland, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Iceland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, Bangladesh&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, South Korea, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, Italy, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, France, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, Romania, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, United Kingdom, Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Malta, France, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Spain, Malta&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Netherlands, Japan, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nicaragua&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Norway, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Philippines&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Senegal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden, Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Taiwan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Thailand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Denmark, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France, Germany, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany, Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Spain, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Venezuela&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast:nk]</column>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast:nk]' value='168' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast:nk]</rows>
        <cols>[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]</cols>
      </table>
      <simple-id uuid='{414A5C84-AF91-465A-95FA-025A07D8F8A0}' />
    </worksheet>
    <worksheet name='big_cast'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' italic='true'>Total do elenco </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column-instance column='[cast]' derivation='CountD' name='[ctd:cast:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='409' />
            <format attr='height' value='200' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
            <format attr='color' value='#aa0000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:cast:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='14.547999382019043' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{412B934F-8BD9-43AE-85FB-6730409FA545}' />
    </worksheet>
    <worksheet name='big_directors'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' italic='true'>Total de diretores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column-instance column='[director]' derivation='CountD' name='[ctd:director:qk]' pivot='key' type='quantitative' />
            <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='409' />
            <format attr='height' value='197' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#aa0000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:director:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='14.547999382019043' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3B44E1F3-9431-4DC1-9BEC-95316A383271}' />
    </worksheet>
    <worksheet name='big_titles'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' italic='true'>Total de titulos</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='410' />
            <format attr='height' value='204' />
            <format attr='color' value='#aa0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='14.547999382019043' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{46FB152D-FE43-4E31-B5C6-7CDE38DFFF3B}' />
    </worksheet>
    <worksheet name='pizza_type'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' italic='true'>Qtd entre serie e filmes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='min(1)' datatype='integer' name='[Calculation_1119707519521615883]' role='measure' type='quantitative' user:unnamed='Planilha 4'>
              <calculation class='tableau' formula='min(1)' />
            </column>
            <column caption='min(1)' datatype='integer' name='[Calculation_1119707519526436877]' role='measure' type='quantitative' user:unnamed='pizza_type'>
              <calculation class='tableau' formula='min(1)' />
            </column>
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[pcto:ctd:title:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1119707519521615883]' derivation='User' name='[usr:Calculation_1119707519521615883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1119707519526436877]' derivation='User' name='[usr:Calculation_1119707519526436877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='height' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk]' value='28' />
            <format attr='height' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk]' value='28' />
            <format attr='display' class='0' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk]' scope='cols' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='214' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='color' data-class='total' scope='cols' value='#1b1b1b' />
            <format attr='font-family' data-class='total' scope='cols' value='Tableau Bold' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]>]]></run>
                <run><![CDATA[
<[federated.1dia4yh11lll0o1d3jhim0hotxry].[pcto:ctd:title:qk]>
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]' />
              <size column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[pcto:ctd:title:qk]' />
              <text column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[pcto:ctd:title:qk]' />
              <text column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]' />
              <color column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]>]]></run>
                <run><![CDATA[
<[federated.1dia4yh11lll0o1d3jhim0hotxry].[pcto:ctd:title:qk]>
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='219' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519521615883:qk] + [federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519526436877:qk])</cols>
      </table>
      <simple-id uuid='{B02369B7-D8CC-47F3-A81C-8BF5FA46AC4B}' />
    </worksheet>
    <worksheet name='qtd_curta'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='TOP' datatype='string' name='[Calculation_1119707519528484878]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(INDEX())'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1119707519528484878]' derivation='User' name='[usr:Calculation_1119707519528484878:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:duration:nk]' member='%null%' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;1 Season&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;10 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;11 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;12 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;13 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;15 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;17 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;2 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;3 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;4 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;5 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;6 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;7 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;8 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;9 Seasons&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;10&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;9&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</column>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#aa0000' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]</rows>
        <cols>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</cols>
      </table>
      <simple-id uuid='{B0FE8390-DFD0-474B-8D85-7F7484EB3BF6}' />
    </worksheet>
    <worksheet name='qtd_longa'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1dia4yh11lll0o1d3jhim0hotxry' />
          </datasources>
          <datasource-dependencies datasource='federated.1dia4yh11lll0o1d3jhim0hotxry'>
            <column caption='TOP' datatype='string' name='[Calculation_1119707519528484878]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(INDEX())'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1119707519528484878]' derivation='User' name='[usr:Calculation_1119707519528484878:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:duration:nk]' member='%null%' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;1 Season&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;10 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;11 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;12 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;13 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;15 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;17 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;2 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;3 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;4 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;5 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;6 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;7 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;8 Seasons&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;9 Seasons&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;100&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;101&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;102&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;103&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;104&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;105&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;106&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;107&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;108&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;109&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;110&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;111&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;112&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;113&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;114&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;115&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;116&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;117&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;118&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;119&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;120&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;121&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;122&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;123&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;124&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;125&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;126&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;127&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;128&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;129&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;130&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;131&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;132&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;133&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;134&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;135&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;136&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;137&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;138&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;139&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;140&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;141&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;142&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;143&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;144&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;145&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;146&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;147&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;148&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;149&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;150&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;151&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;152&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;153&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;154&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;155&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;156&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;157&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;158&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;159&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;160&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;161&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;162&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;163&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;164&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;165&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;166&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;167&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;168&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;169&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;170&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;171&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;172&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;173&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;174&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;175&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;176&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;177&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;178&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;179&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;180&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;181&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;182&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;183&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;184&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;185&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;186&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;187&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;188&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;189&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;190&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;191&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;192&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;193&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;194&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;195&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;196&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;197&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;198&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;199&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;200&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;201&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;202&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;203&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;204&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;205&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;65&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;66&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;67&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;68&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;69&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;70&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;71&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;72&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;73&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;74&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;75&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;76&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;77&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;78&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;79&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;80&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;81&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;82&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;83&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;84&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;85&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;86&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;87&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;88&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;89&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;90&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;91&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;92&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;93&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;94&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;95&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;96&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;97&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;98&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1119707519528484878:nk:1]' member='&quot;99&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</column>
            <column>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dia4yh11lll0o1d3jhim0hotxry].[ctd:title:qk]</rows>
        <cols>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</cols>
      </table>
      <simple-id uuid='{CD04C865-F9BA-4F20-89E8-950A00D1472A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Catalog_Netflix'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='44922' id='14' param='horz' type-v2='layout-flow' w='98828' x='586' y='54036'>
            <zone h='44922' id='12' type-v2='layout-basic' w='98828' x='586' y='54036'>
              <zone h='44922' id='16' is-fixed='true' type-v2='layout-basic' w='98828' x='586' y='54036'>
                <zone h='44922' id='3' param='horz' type-v2='layout-flow' w='32942' x='586' y='54036'>
                  <zone h='44922' id='11' name='pizza_type' w='32942' x='586' y='54036'>
                    <layout-cache minwidth='100' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='44922' id='17' param='horz' type-v2='layout-flow' w='65886' x='33528' y='54036'>
                  <zone h='44922' id='18' name='bar_Country' w='65886' x='33528' y='54036'>
                    <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='22135' id='30' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone _.fcp.ExternalImageContentForZones.true...image-file-url='https://blog.colombo.com.br/wp-content/uploads/2016/11/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png' fixed-size='1342' forceUpdate='true' h='22135' id='31' is-fixed='true' is-scaled='1' type-v2='bitmap' w='98828' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone h='30859' id='35' param='horz' type-v2='layout-flow' w='31477' x='586' y='23177'>
            <zone fixed-size='292' forceUpdate='true' h='30859' id='36' is-fixed='true' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABY1MwfEAdN3QuWy68q_OzLuCKIYbzka0xjk99_jx15PPnDLtonIkr0fPOQAF952ZPzIHa3N4BFP2M_XL2Op6_3FvOUAuTXUE7I91bV54HE22ObF1m2SJs32kJH0zg_7nEtio.jpg' type-v2='bitmap' w='31477' x='586' y='23177'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='30859' id='37' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABZbAaqHTJkzQMHVBaXsUPREnQBmDU7FrwE_KAd1QEIGKnCq2gcjbJPrMufosmLAhgDFuaF_LZ8FWKD-IBjN8lkjNctzz4EItIT4.jpg' type-v2='bitmap' w='34407' x='32063' y='23177'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='30859' id='38' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABQUAB7P085DHqN30qQxWCFOEVcJoeWbIByNwvYFVTl14oBd-G4SwpQB1MQH5BG23x9LJaBUGv3IdIaJQb0QN-wkFQminLabsKe87C7ZF-ZjenrWSHD3saAqpk8PRaqDGAKiJ.jpg' type-v2='bitmap' w='32944' x='66470' y='23177'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34896' id='8' name='big_titles' w='30015' x='1245' y='18880'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#1b1b1bc1' />
          </zone-style>
        </zone>
        <zone h='34896' id='9' name='big_cast' w='29941' x='34261' y='18620'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#1b1b1bc1' />
          </zone-style>
        </zone>
        <zone h='35026' id='10' name='big_directors' w='29941' x='67936' y='18620'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#1b1b1bc1' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='41' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone _.fcp.ExternalImageContentForZones.true...image-file-url='https://blog.colombo.com.br/wp-content/uploads/2016/11/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png' fixed-size='162' forceUpdate='true' h='22135' id='31' is-fixed='true' is-scaled='1' type-v2='bitmap' w='98828' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='268' h='34896' id='9' is-fixed='true' name='big_cast' w='29941' x='34261' y='18620'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#1b1b1bc1' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='35026' id='10' is-fixed='true' name='big_directors' w='29941' x='67936' y='18620'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#1b1b1bc1' />
                  </zone-style>
                </zone>
                <zone fixed-size='268' h='34896' id='8' is-fixed='true' name='big_titles' w='30015' x='1245' y='18880'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#1b1b1bc1' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' forceUpdate='true' h='30859' id='36' is-fixed='true' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABY1MwfEAdN3QuWy68q_OzLuCKIYbzka0xjk99_jx15PPnDLtonIkr0fPOQAF952ZPzIHa3N4BFP2M_XL2Op6_3FvOUAuTXUE7I91bV54HE22ObF1m2SJs32kJH0zg_7nEtio.jpg' type-v2='bitmap' w='31477' x='586' y='23177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' forceUpdate='true' h='30859' id='37' is-fixed='true' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABZbAaqHTJkzQMHVBaXsUPREnQBmDU7FrwE_KAd1QEIGKnCq2gcjbJPrMufosmLAhgDFuaF_LZ8FWKD-IBjN8lkjNctzz4EItIT4.jpg' type-v2='bitmap' w='34407' x='32063' y='23177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='30859' id='38' is-fixed='true' is-scaled='1' param='C:/Users/gliminha/Downloads/AAAABQUAB7P085DHqN30qQxWCFOEVcJoeWbIByNwvYFVTl14oBd-G4SwpQB1MQH5BG23x9LJaBUGv3IdIaJQb0QN-wkFQminLabsKe87C7ZF-ZjenrWSHD3saAqpk8PRaqDGAKiJ.jpg' type-v2='bitmap' w='32944' x='66470' y='23177'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44922' id='11' is-fixed='true' name='pizza_type' w='32942' x='586' y='54036'>
                  <layout-cache minwidth='100' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44922' id='18' is-fixed='true' name='bar_Country' w='65886' x='33528' y='54036'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6E7EEFA6-F142-41BA-B061-F8453E7602CC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Catalog_Netflix'>
      <viewpoints>
        <viewpoint name='bar_Country' />
        <viewpoint name='big_cast' />
        <viewpoint name='big_directors' />
        <viewpoint name='big_titles' />
        <viewpoint name='pizza_type' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E8147901-0067-41C7-9269-D9EB04063E27}' />
    </window>
    <window class='worksheet' name='bar_TopCast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[max:title:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast - Dividir 10:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:cast:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:description:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:director:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:title:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C741EB9-CA82-4A6B-BEFA-3F37086BA9D9}' />
    </window>
    <window class='worksheet' name='big_titles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4B7E79B-9BC5-4FDF-89BB-4EACCD49A019}' />
    </window>
    <window class='worksheet' name='big_cast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4CB78C8-5D17-4145-8A6B-3F6E61D01991}' />
    </window>
    <window class='worksheet' name='big_directors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:listed_in:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC45D0C8-3C14-49CD-9B0A-816DDF95F2B9}' />
    </window>
    <window class='worksheet' name='pizza_type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='2' param='[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]&#10;[federated.1dia4yh11lll0o1d3jhim0hotxry].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.1dia4yh11lll0o1d3jhim0hotxry].[pcto:ctd:title:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[:Measure Names]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:Calculation_1119707519518855172:qk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81B2F84E-BC4E-4715-9EFB-715D2F863FAB}' />
    </window>
    <window class='worksheet' name='barReleased_Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:release_year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED9291BF-F4EF-4C33-9ACC-66185FE87563}' />
    </window>
    <window class='worksheet' name='bar_Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:country - Dividir 1:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4921833A-4BEF-4906-BC20-C9A9EAC07F00}' />
    </window>
    <window class='worksheet' name='qtd_curta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[cnt:duration:qk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:Calculation_150870650976407552:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:title:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{67D81247-39CB-44C4-A77F-F8EF1BBD88D8}' />
    </window>
    <window class='worksheet' name='qtd_longa'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:Calculation_150870650988785666:qk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:Calculation_150870650988941315:qk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[none:duration:nk]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk:1]</field>
            <field>[federated.1dia4yh11lll0o1d3jhim0hotxry].[usr:Calculation_1119707519528484878:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0B4C299C-72BC-4D90-9394-FE109E1A7545}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Catalog_Netflix' width='192'>
      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
      46zG/wfVZEnOxU5B1gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='barReleased_Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar_Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bar_TopCast' width='192'>
      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
    </thumbnail>
    <thumbnail height='148' name='big_cast' width='192'>
      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
    </thumbnail>
    <thumbnail height='148' name='big_directors' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACUCAYAAADFwybmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAD2ElEQVR4nO3d0VGrQBiG4T9nThPQxlpGYhmkDLUMKEMow00ZSxmci0xygBATiLou3/tc
      GZ3RdYZXdmGJm67rOgNE/Yk9ACAmAoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0
      AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0
      AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0
      AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoC0v7EHgPVo29a6rjMzs81mM/g4y7KYQ7uK
      APBl6rq2qqomv+acs7Isf3hEtzEFwpcIIVw9+H8zAsDDQgj29vYWexiLEAAe1jSNee/Pr7Ms
      M+dcxBHdjwDwkLZtB1OfLMusLEvb7XYRR3U/AsBiIQR7fX0dfK4oCsvzPM6AFiAALOa9H0x9
      nHPJ/OU3OwZMAFhkvPDNssxeXl4ijmi+tm0JAMuMr/rsdrukpj5mxzMYAWC2uq4vrvoURRFx
      RMsRAGaZmvqMF8Kp4AyA2aamPqlc8x9jEYxZ1jT1CSGwCMb9pm54pTr1MTv+PmasAXCnqqrO
      B43Z8Zp/qlOfPgLATd57q+v6/Dr1v/5mdp7KEQA+NbXdIfWD34wAcKemaQZTn+12u4qpzwkB
      4Crv/aoWvn2cAfCpqSe8Ur3kOdY/o/FMMC6EEOz5+fn8+rTHP7W9Ptf0F/ScATDQtu3F3d7U
      9vjfUhTFeR3DGQADHx8fSe/xv1dZlmyFwNAa9vjPkec5AeC/Nezxn4sAYGbr2ug2BwHgYuG7
      puv9txAALg72lPf4z0UA4lSnPidcBhU2dbfXOfcl7/HZj+raz+rbbrdRFtyb7vQe1pBTVdWv
      eUPbsiyjTLuYAgkLIcQeQnQEAGlMgYR95xngcDgMri455z69qxzrhhuLYGHfedAdDocf/XlL
      MQWCNAKANAKAlP1+b03TnF8TAKSc3uViv9+bGYtgJKSqqosrV0sf2PHe29PTEwEgHeP/SGN2
      3Mn6yBNrTIEgZRwLAUBKURT2/v7OQ/HQlec5D8UDeZ6zFwjf4/QPKPoe3e489T0f/b4EAGlM
      gSCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCN
      ACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCN
      ACCNACCNACCNACCNACDtHwZ7ONkl9UN2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='148' name='big_titles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACUCAYAAADFwybmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFtUlEQVR4nO3d7ZGiShiG4XdPbRIQxjBh6ISBYYhhSBgjYYhhNGF4fmw1A03rOIjA7nNf
      VftjrPJjq7ilG2j8db1erwaI+m/pDwAsiQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAg
      jQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAg
      jQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAg
      jQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAgjQAg7ffSHwB/D+ec1XVtdV1b0zTtY2Zm
      aZqamVmWZe2/v8Gv6/V6XfpDYL2cc1ZVlZ1Op3ajf1Se55YkiW232xd9uucRAKL8hl+W5dOv
      lSSJHY/Hdi+xJgSAAeec7Xa7b7/xkyQxM3t4z7Df71e3NyAA9DRNY3meRzdqP5y5Ncb3c4Sm
      aW7uOfI8tzzPJ//cY5RlSQD44pyzw+FgdV33Hk+SxIqi+NHE9t4Q6ng8Lj5JPp1OdjgcCABf
      yrIcbLCbzcaKohj9mnVd2263Gzz++fm52JygaZp2KMZ5AJjZn2/scOPPsuypjd+/xvF4HDw+
      xeR6rO57EwDMzKLDnv1+P8lrZ1k2GPdXVTXJa/+Uc85Op1P7NwHAzIYbZJZlkw5RYhPf7oY4
      l3ByTwAws68zut4rDlcuPfE1G/4/CQDWNM3gm9Ef459S+Jo/PbM8BfYAGIht7K84QrPGM8EE
      ADMbRhAOFaYQm2jPLXxPAoCZDcfn4cb6rFhQS+wRwvckAJjZMICpD1M2TdOLKkmSRSbF4dEt
      AoCZ/Tnq0x0e+Ov+pxC7NmjJ64G6700AaIVnfXe73dMR+BNP4bf/kleFbjabdu9DAGjFztg+
      E0Hsgji/NmBp/iw3F8NhoCiKwRwgz3PbbDYPTVydc3a5XOx4PPaOu69tYUxd1wSAuNiVoWb9
      NQFJkliapu0RnsvlYufzubdmuPu8NW38HgHgW2OWR/pQ1rL45RbmALireyeIsc9fM/YAiLr3
      re8Pl6Zp2lsXfCuSLMtsv9+vbvhjRgCIiC2K9yeu/Pj/3nNv3UZlTeuBPQJAT2wJ49hv8NhE
      +tYKsbn5UAkALeecfXx89B579ls7ttB+6QiaprGiKKyuaybB+MMPe7qmGLKkaTq4C0Rd14uu
      Ce6emSYAmJnZ4XDojdk3m82k4/VwfXFZlpNfcfqIMD4CQPRKzWfvBhFK03QQwRJrgsM9DwEg
      OlF9hfACuKqqZj1P4M9peEmSEACGi19eeaVmeCRpzmFQeFg2TVMCwPBs7SuXKr69vfX+nnNh
      fGxJJgGIm3upYvjacw+Bws9CABhY+/U7U3HOEYC6ua/PCYchc75/7L0IALNNTMOjMHML5zZV
      VREAhhPTV924NjbhnfPOELGjWwQAe39/7/095R0hvNjt15e4NQo3xsJA9y4J3hR3hOiqqmrw
      ektcGh2+J1eDwszil0GP+Wmk0K2FNWOuCC3LcnCEyq9R+Ilu3ASAVuxuEGbjrwq995tjYxbI
      x/ZKY0LqXvbNEAitW9/2ZVnadruNfgOH/JGeoijs4+Pj5g/uLbk80l+ibcYeABG3boni+duh
      xO73f2/e8OytUabaA3h1XdvvUc/EPy3Pc8uyLPrrjmbxH9R45DXXth44yzICQFyWZXY+n60s
      y+gC90c8upB+SQyB8BB/NOe7cwR+o/f/phzrO+cmP5lGABitOyFe4z1/HkEAkMZhUEgjAEgj
      AEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgj
      AEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgjAEgj
      AEgjAEj7H28CzFl8tyXqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pizza_type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACM0lEQVR4nO3WsQ3DMBAEQdlw2SyOClgXndoNiMHOZJ9dssC/9t77gqj36QFwkgBI+/we
      a63rvu9TW+BxfwHMOa8xxqkt8DgvEGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApH0B00INxsNhjUQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='qtd_curta' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJTElEQVR4nO3d329T5x3H8c/5YTt24tix0yQQl0AZtIGOQSmsUDahalVXVFW9QpqE1Jve
      V+pd/4lW/Se42BjqTaVJk9Z1TFubQVtKoNAkDWn5ERKSOLZj+9h+ztkFYOT2nIsnbZ40/n5e
      d+cQP34s/Jb92MfnWEEQBCASyLIsy97sSRBtJgZAojEAEs3d7AlId//mVXzy+Szy2wo4eezg
      j/69WV7AXDmGjN1AbmQYzibMsZtZXARvrnvTX2LRLuDWjf9gIDsCQOHu7Wns3/8bnDv3V4yP
      j2MhGMTuvAOoKkqlOmJuDJViCS//6Qzy8c1+BFuXZVkWXwE2WSzRg+nP/4eRHbtRW5xDw+3H
      6NheDKdt7D14FE9uH4G1WEU63QO0HDRUHAPZLPYUtm321LsCXwFIrJ/0CqCUgu/7sCzr55wT
      kVHaAZSLS4j35ZFwHyzHHIfLMtq6tD4G9Vsepq9+geX6Rk2HyCytAO7MfYuK18BKsbhR8yEy
      SnsR3KyuohnLIBV7sA7gWyDaqizLsn7Sp0AMgLYyHgxH4jEAEo0BkGgMgERjACQaAyDRGACJ
      xgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJ
      xgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJ
      xgBINAZAojEAEo0BkGgMgERjACQaAyDRtAKorxUxeeUKStXGRs2HyChX54/jiR5YgY9qtYbe
      hAOlFIIg2Ki50c/MbzRQnJjQvl3m8GE4yWR7u377Nqqzs1pjOH19yBw82LGvdPkyWuWy1jjJ
      nTuRLBTa26pex+rFi1pjAED2yBEAmgF49QYGsmlUqjWMDGYAAI7jaN85bQ5vZQWX33lH+3Yv
      fvghEul0e3vpwgV88957WmOkn3kGL5w927Fv6oMPUJqc1Bpnz9tvY+ebb7a3m6ur63pMJz76
      CIBmALF4HFY8hbEnhrXvkOiXSCsAN96DbSMjGzUXIuP4KRCJxgBINAZAojEAEo0BkGgMgERj
      ACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERj
      ACQaAyDRGACJxgBINAZAokWeGzQIfAQBYFkWLMsyOSciYyID+PK/f8PcnSbG9h3FoX3bTM6J
      yJjQt0ANr4ZUehDLKyvYNjpgek5ExoQGsFZcwv1SE+PPPg0n8E3PiciY0AD6shl8PzWDen0V
      i8trpudEZExoAKrZRDKZwL3FCrKZZNifEHWF0EXw0nwRfzx9GnHTsyEyLDSA+ZtTuDw3iwRs
      /PrwUQxle03Pi8iI0ACePvICDmYy4PUfqduFBtCXyWDm6qe4tdjC6FP78KsdOdPzIjIi8lCI
      AMDU9RtwE1wJUPcKDeD+rVl8MTmH0Sfz8Jot03MiMiY0gMHCLjy7ZwyWbcPyA9NzIjIm8lig
      8UO/xR6l4Lpa19Im2lIi1wBTk5/iL2f/jNl7ZZPzITIq+vcAbgrJngCNWsPgdIjMCg2g1aji
      xrUZbB8rQCllek5ExoQGYNkucgN9WFptYmSo3/SciIwJXeE6bhyJRA/27t6Fnhi/D6buFfoK
      4PsK+SfyuDk9hTLXANTFwtcAXhXLyyVY8NFocg1A3SviUyCFSxOXUKmWUas//iY4CHzU63X4
      Ab8co+4QGkA8mcXJP7yE4VwGvalEe399rYSbM9P47u6SsQkSbaTIr3mbtVWUax7KpRow+OD3
      APF4AvHeNLYPDUApBaUUAr4aGDH57rsoXb2qdZsdZ86gcPp0e7vVaq3r/6ulFFqtx+8EfN/X
      HicIgo4xHu3THUf5fsc4rXU+Bx99vB8agLe2Cq9lodm0kMn2tPevFpdQKhZRyg5i8OGPZByH
      nxKZ0Fxehjc/r3Ubv1rtOJRFue66zvHkOk7HOLZta49jWdaPDqtZzzmnHNvuGMd1nHU9pkfP
      29AAyivLuHVvAYm4i0brcV25oQJyQwXtOyP6pYo8GrSQT8NxFFZLddNzIjImcg1w6PhJrFVr
      6O1NmZwPkVGRB8Ndmfg3/vnJv3B3uWJyPkRGRQbgeXX0pfsRc3gCaepekc9u13XheR6/9KKu
      Fh1AzIfyGlhY4KkRqXtFBpDND2FlaRl5Hg5NXSwygHq1icHhfnz11ST4Joi6VWQAlXIZtuXj
      3vcLaJqcEZFBkQEkUw5mp+/ixZdO8CS51LWiF8E9WQwPpaF4YizqYpG/CPO8AMd+fwIJmxfI
      o+4VcYGMKqa+/hqT128ik+Op0al7hQYQS6SxfWQAgR+g2eBbIOpekWuAgfwA6rU6PwKlrhYZ
      QK1aR8xuoFjyTM6HyKjwRbBqIZXug1JAsjcR9idEXSE0gOnLlzDw1AH87ug4VpZ4ODR1r9Af
      xGwfK+DCP/4OIMDxky8bnhKROeHXCMuP4tVXR03Phcg4/tqFRGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0rQC8agnXv/l2o+ZCZFzo6dGjJFL96E0WAQBKKSil
      EAQB/GYTd86d077zoVdeQTyXa2+vzcxgZWJCaww3ncbIa6917Fv8+GN48/Na4/Tv34/+Awfa
      277n4c7581pjAMDwqVOIZTLt7crUFIoXL2qNEctkMHzqVMe+IAgQBHpXbPOVQqv1+CKHrVZL
      ewwAaP1gHN/3tccJgqBjjEf7dMdRvt/5mB4+B3UppQBoBlCvFDE7O4tkOofBbB8AwHEctBoN
      TL3/vvYkcs8/j9TQUHu7cu2a9jipHTtQeOONjn13zp/H8mefaY2z6623kHvuufZ2o1JZ12Ma
      PH4cyXy+vV2+ckV7nN7duzH6+usd+yzLgmXpXbPZdhy47uP/YuW62mMAgPuDcWzb1h7HsqyO
      MR7t0x3Hse2OcVzHWddjchznwe11bpRI9ePYseOwH96YaKvTCsCybcRsrpupe/DZTKIxABKN
      AZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKN
      AZBoDIBE+z9VH53Ja5bRFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='qtd_longa' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
